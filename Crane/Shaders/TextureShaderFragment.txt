#version 330 core
in vec2 TexCoord;
in vec3 Normal;
in vec3 FragPos; 

out vec4 color;

uniform vec3 ambient;
uniform vec3 light;
uniform vec3 lightPos;
uniform vec3 viewPos;
uniform sampler2D Texture;

float specularStrength = 0.6;

void main()
{
	vec3 norm = normalize(Normal);
	vec3 lightDir = normalize(lightPos - FragPos);

	float diff = max(dot(norm, lightDir), 0.0);
	vec3 diffuse = diff * light;

	vec3 viewDir = normalize(viewPos - FragPos);
	vec3 reflectDir = reflect(-lightDir, norm);
	
	float spec = pow(max(dot(viewDir, reflectDir), 0.0), 64);
	vec3 specular = specularStrength * spec * light; 

	color = vec4((ambient + diffuse + specular) * texture(Texture, TexCoord).xyz, 1.0);
}